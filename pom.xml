<project xmlns="http://maven.apache.org/POM/4.0.0"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">



	<modelVersion>4.0.0</modelVersion>

	<groupId>com.javacreed.examples</groupId>

	<artifactId>hello-world</artifactId>

	<version>1.0.0</version>

	<packaging>war</packaging>



	<name>Hello World</name>

	<description>A simple hello world project</description>

	<url>https://github.com/javacreed/${project.artifactId}</url>

	<inceptionYear>${project.inceptionYear}</inceptionYear>

	<organization>

		<name>${project.organization.name}</name>

		<url>${project.organization.url}</url>

	</organization>



	<contributors>

		<contributor>

			<name>Albert Attard</name>

			<email>albert@javacreed.com</email>

		</contributor>

	</contributors>



	<licenses>

		<license>

			<name>The Apache Software License, Version 2.0</name>

			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>

			<distribution>repo</distribution>

		</license>

	</licenses>



	<scm>

		<connection>scm:git:git://github.com/javacreed/hello-world.git</connection>

		<developerConnection>scm:git:git://github.com/javacreed/hello-world.git</developerConnection>

		<url>https://github.com/javacreed/hello-world</url>

	</scm>



	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.source>1.8</maven.compiler.source>

		<maven.compiler.target>1.8</maven.compiler.target>



		<project.inceptionYear>2012</project.inceptionYear>

		<project.organization.name>Java Creed</project.organization.name>

		<project.organization.url>https://github.com/javacreed/</project.organization.url>



		<surefire.version>2.20.1</surefire.version>

		<jacoco.version>0.7.9</jacoco.version>

		<reports.version>2.9</reports.version>

		<exec.version>1.6.0</exec.version>

		<license.version>1.16</license.version>

	</properties>



	<build>

		<defaultGoal>clean install exec:java</defaultGoal>



		<plugins>

			<plugin>

				<groupId>org.apache.maven.plugins</groupId>

				<artifactId>maven-surefire-plugin</artifactId>

				<version>${surefire.version}</version>

				<configuration>

					<!-- Sets the VM argument line used when unit tests are run. -->

					<argLine>${surefireArgLine}</argLine>

					<!-- Skips unit tests if the value of skip.unit.tests property is true -->

					<skipTests>${skip.unit.tests}</skipTests>

				</configuration>

			</plugin>



			<plugin>

				<groupId>org.jacoco</groupId>

				<artifactId>jacoco-maven-plugin</artifactId>

				<version>${jacoco.version}</version>

				<executions>

					<!-- Prepares the property pointing to the JaCoCo runtime agent which 

						is passed as VM argument when Maven the Surefire plugin is executed. -->

					<execution>

						<id>pre-unit-test</id>

						<goals>

							<goal>prepare-agent</goal>

						</goals>

						<configuration>

							<!-- Sets the path to the file which contains the execution data. -->

							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>

							<!-- Sets the name of the property containing the settings for JaCoCo 

								runtime agent. -->

							<propertyName>surefireArgLine</propertyName>

						</configuration>

					</execution>

					<!-- Ensures that the code coverage report for unit tests is created 

						after unit tests have been run. -->

					<execution>

						<id>post-unit-test</id>

						<phase>test</phase>

						<goals>

							<goal>report</goal>

						</goals>

						<configuration>

							<!-- Sets the path to the file which contains the execution data. -->

							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>

							<!-- Sets the output directory for the code coverage report. -->

							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>

						</configuration>

					</execution>

				</executions>

			</plugin>



			<plugin>

				<groupId>org.codehaus.mojo</groupId>

				<artifactId>exec-maven-plugin</artifactId>

				<version>${exec.version}</version>

				<configuration>

					<mainClass>com.javacreed.examples.Main</mainClass>

				</configuration>

			</plugin>

			<plugin>

				<groupId>org.codehaus.mojo</groupId>

				<artifactId>license-maven-plugin</artifactId>

				<version>${license.version}</version>

				<configuration>

					<verbose>false</verbose>

				</configuration>

				<executions>

					<execution>

						<id>first</id>

						<goals>

							<goal>update-file-header</goal>

							<goal>add-third-party</goal>

						</goals>

						<phase>process-sources</phase>

						<configuration>

							<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>

							<licenseName>apache_v2</licenseName>

							<sortArtifactByName>true</sortArtifactByName>

							<roots>

								<root>src/main</root>

								<root>src/test</root>

							</roots>

						</configuration>

					</execution>

				</executions>

			</plugin>

		</plugins>

	</build>

</project>
